# -*- coding: utf-8 -*-
"""mod4_almostfinaldraft

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_bd-NLUZ8j2KmZebne1GverhcGAzxZ_K
"""

import numpy as np
import pandas as pd
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler
import matplotlib.pyplot as plt

df = pd.read_csv('rice.csv', thousands=',')
# https://stackoverflow.com/questions/37439933/pandas-reading-csv-data-formatted-with-comma-for-thousands-separator
focus_on = ['Rice Production (Tons)', 'Rice Acreage (Hectare)', 'Rice Yield (Kg / Hectare)']
rice_df = df[focus_on]

scaler = StandardScaler()
scaled_rice = scaler.fit_transform(rice_df)

sum_squares = []
k_range = range(1,11)

for k in k_range:
    km = KMeans(n_clusters=k)
    km.fit(scaled_rice)
    sum_squares.append(km.inertia_)

plt.figure(figsize=(8, 5))
plt.plot(k_range, sum_squares, marker='o', color='pink')
plt.xlabel('Number of Clusters (k)')
plt.ylabel('Inertia')
plt.title('Elbow Method for Optimal k Amount')
plt.xticks(k_range)
plt.grid()
plt.show()

kmeans = KMeans(n_clusters=5)
cluster_labeling = kmeans.fit_predict(rice_df)
rice_df['Cluster'] = cluster_labeling

grouping = rice_df.groupby('Cluster')
for cluster, group in grouping:
    print(f"Cluster {cluster}:")
    print(group[['Rice Production (Tons)']])